httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
httpx - DEBUG - load_verify_locations cafile='/root/anaconda3/envs/gpt/lib/python3.9/site-packages/certifi/cacert.pem'
httpcore.connection - DEBUG - connect_tcp.started host='aip.baidubce.com' port=443 local_address=None timeout=None socket_options=None
httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x7f46b9b97490>
httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f46b9ae4540> server_hostname='aip.baidubce.com' timeout=None
httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x7f46b8f91430>
httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - send_request_headers.complete
httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - send_request_body.complete
httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Access-Control-Allow-Headers', b'Content-Type'), (b'Access-Control-Allow-Origin', b'*'), (b'Appid', b'57858329'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Date', b'Sun, 24 Mar 2024 12:50:48 GMT'), (b'P3p', b'CP=" OTI DSP COR IVA OUR IND COM "'), (b'Server', b'Apache'), (b'Set-Cookie', b'BAIDUID=5B85F640BF7C876B4F03CC11F5DA8859:FG=1; expires=Thu, 31-Dec-37 23:55:55 GMT; max-age=2145916555; path=/; domain=.baidu.com; version=1'), (b'Statement', b'AI-generated'), (b'Vary', b'Accept-Encoding'), (b'X-Aipe-Self-Def', b'eb_total_tokens:1285,prompt_tokens:1277,id:as-buujmdfw2i'), (b'X-Baidu-Request-Id', b'228d47c4d89e200d4e561ba51da020321000523'), (b'X-Openapi-Server-Timestamp', b'1711284647'), (b'X-Ratelimit-Limit-Requests', b'300'), (b'X-Ratelimit-Limit-Tokens', b'300000'), (b'X-Ratelimit-Remaining-Requests', b'299'), (b'X-Ratelimit-Remaining-Tokens', b'298723'), (b'Content-Length', b'204')])
httpx - INFO - HTTP Request: POST https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/chat/completions?access_token=BAIDUTOKEN "HTTP/1.1 200 OK"
httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - receive_response_body.complete
httpcore.http11 - DEBUG - response_closed.started
httpcore.http11 - DEBUG - response_closed.complete
httpcore.connection - DEBUG - close.started
httpcore.connection - DEBUG - close.complete
neuron_explainer.explanations.explainer - DEBUG - response in generate_explanations is {'id': 'as-buujmdfw2i', 'object': 'chat.completion', 'created': 1711284648, 'result': 'words indicating universality or generality.', 'is_truncated': False, 'need_clear_history': False, 'finish_reason': 'normal', 'usage': {'prompt_tokens': 1277, 'completion_tokens': 8, 'total_tokens': 1285}}
httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
httpx - DEBUG - load_verify_locations cafile='/root/anaconda3/envs/gpt/lib/python3.9/site-packages/certifi/cacert.pem'
httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
httpx - DEBUG - load_verify_locations cafile='/root/anaconda3/envs/gpt/lib/python3.9/site-packages/certifi/cacert.pem'
httpcore.connection - DEBUG - connect_tcp.started host='aip.baidubce.com' port=443 local_address=None timeout=None socket_options=None
httpcore.connection - DEBUG - connect_tcp.started host='aip.baidubce.com' port=443 local_address=None timeout=None socket_options=None
httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x7f46b951a910>
httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f46b9ab84c0> server_hostname='aip.baidubce.com' timeout=None
httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x7f46b8f91df0>
httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f46b9af87c0> server_hostname='aip.baidubce.com' timeout=None
httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x7f46b951d280>
httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x7f46b951d3d0>
httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - send_request_headers.complete
httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - send_request_headers.complete
httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - send_request_body.complete
httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - send_request_body.complete
httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Access-Control-Allow-Headers', b'Content-Type'), (b'Access-Control-Allow-Origin', b'*'), (b'Appid', b'57858329'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Date', b'Sun, 24 Mar 2024 12:51:17 GMT'), (b'P3p', b'CP=" OTI DSP COR IVA OUR IND COM "'), (b'Server', b'Apache'), (b'Set-Cookie', b'BAIDUID=CCF24233E54EF066F6736FF8298D9711:FG=1; expires=Thu, 31-Dec-37 23:55:55 GMT; max-age=2145916555; path=/; domain=.baidu.com; version=1'), (b'Statement', b'AI-generated'), (b'Vary', b'Accept-Encoding'), (b'X-Aipe-Self-Def', b'eb_total_tokens:3864,prompt_tokens:3411,id:as-3i6ghbx7yd'), (b'X-Baidu-Request-Id', b'ddd22c69d5c3d59483fd9897da6cafef1000875'), (b'X-Openapi-Server-Timestamp', b'1711284648'), (b'X-Ratelimit-Limit-Requests', b'300'), (b'X-Ratelimit-Limit-Tokens', b'300000'), (b'X-Ratelimit-Remaining-Requests', b'298'), (b'X-Ratelimit-Remaining-Tokens', b'295304'), (b'Content-Length', b'411')])
httpx - INFO - HTTP Request: POST https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/chat/completions?access_token=BAIDUTOKEN "HTTP/1.1 200 OK"
httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - receive_response_body.complete
httpcore.http11 - DEBUG - response_closed.started
httpcore.http11 - DEBUG - response_closed.complete
httpcore.connection - DEBUG - close.started
httpcore.connection - DEBUG - close.complete
neuron_explainer.explanations.simulator - DEBUG - result in score_explanation_by_activations is SequenceSimulation(dataclass_name='SequenceSimulation', tokens=[',', ' the', ' responsibility', ' for', ' providing', ' this', ' falls', ' to', ' specific', ' individuals', ' who', ' have', ' rep', 'utations', ' for', ' being', ' able', ' to', ' understand', ' Mats', 'h', 'ish', 'k', 'ape', 'u', ' .', ' These', ' are', ' usually', ' people', ' in', ' their', ' f', 'ift', 'ies', ' or', ' older', ' including', ' both', ' men', ' and', ' women', '.', ' ....', ' Let', ' me', ' conclude', ' this', ' section', ' by', ' noting', ' that', ' Mats', 'h', 'ish', 'k', 'ape', 'u', " '", 's', ' role', ' as', ' a', ' medi'], expected_activations=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], activation_scale=<ActivationScale.SIMULATED_NORMALIZED_ACTIVATIONS: 'simulated_normalized_activations'>, distribution_values=[], distribution_probabilities=[], uncalibrated_simulation=None)
root - DEBUG - SequenceSimulation(dataclass_name='SequenceSimulation', tokens=[',', ' the', ' responsibility', ' for', ' providing', ' this', ' falls', ' to', ' specific', ' individuals', ' who', ' have', ' rep', 'utations', ' for', ' being', ' able', ' to', ' understand', ' Mats', 'h', 'ish', 'k', 'ape', 'u', ' .', ' These', ' are', ' usually', ' people', ' in', ' their', ' f', 'ift', 'ies', ' or', ' older', ' including', ' both', ' men', ' and', ' women', '.', ' ....', ' Let', ' me', ' conclude', ' this', ' section', ' by', ' noting', ' that', ' Mats', 'h', 'ish', 'k', 'ape', 'u', " '", 's', ' role', ' as', ' a', ' medi'], expected_activations=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], activation_scale=<ActivationScale.NEURON_ACTIVATIONS: 'neuron_activations'>, distribution_values=[], distribution_probabilities=[], uncalibrated_simulation=SequenceSimulation(dataclass_name='SequenceSimulation', tokens=[',', ' the', ' responsibility', ' for', ' providing', ' this', ' falls', ' to', ' specific', ' individuals', ' who', ' have', ' rep', 'utations', ' for', ' being', ' able', ' to', ' understand', ' Mats', 'h', 'ish', 'k', 'ape', 'u', ' .', ' These', ' are', ' usually', ' people', ' in', ' their', ' f', 'ift', 'ies', ' or', ' older', ' including', ' both', ' men', ' and', ' women', '.', ' ....', ' Let', ' me', ' conclude', ' this', ' section', ' by', ' noting', ' that', ' Mats', 'h', 'ish', 'k', 'ape', 'u', " '", 's', ' role', ' as', ' a', ' medi'], expected_activations=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], activation_scale=<ActivationScale.SIMULATED_NORMALIZED_ACTIVATIONS: 'simulated_normalized_activations'>, distribution_values=[], distribution_probabilities=[], uncalibrated_simulation=None))
httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Access-Control-Allow-Headers', b'Content-Type'), (b'Access-Control-Allow-Origin', b'*'), (b'Appid', b'57858329'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Date', b'Sun, 24 Mar 2024 12:51:20 GMT'), (b'P3p', b'CP=" OTI DSP COR IVA OUR IND COM "'), (b'Server', b'Apache'), (b'Set-Cookie', b'BAIDUID=CCF24233E54EF06673CDAF7746A71C80:FG=1; expires=Thu, 31-Dec-37 23:55:55 GMT; max-age=2145916555; path=/; domain=.baidu.com; version=1'), (b'Statement', b'AI-generated'), (b'Vary', b'Accept-Encoding'), (b'X-Aipe-Self-Def', b'eb_total_tokens:3861,prompt_tokens:3410,id:as-82jxeqjqpq'), (b'X-Baidu-Request-Id', b'610b17004945fb1cc40b1da62c3c750a1000868'), (b'X-Openapi-Server-Timestamp', b'1711284648'), (b'X-Ratelimit-Limit-Requests', b'300'), (b'X-Ratelimit-Limit-Tokens', b'300000'), (b'X-Ratelimit-Remaining-Requests', b'297'), (b'X-Ratelimit-Remaining-Tokens', b'291894'), (b'Content-Length', b'389')])
httpx - INFO - HTTP Request: POST https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/chat/completions?access_token=BAIDUTOKEN "HTTP/1.1 200 OK"
httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - receive_response_body.complete
httpcore.http11 - DEBUG - response_closed.started
httpcore.http11 - DEBUG - response_closed.complete
httpcore.connection - DEBUG - close.started
httpcore.connection - DEBUG - close.complete
neuron_explainer.explanations.simulator - DEBUG - result in score_explanation_by_activations is SequenceSimulation(dataclass_name='SequenceSimulation', tokens=[' subject', ',', ' sad', ' story', '\n', '\n', 'This', ' book', ' is', ' a', ' must', '-', 'read', ' if', ' you', ' are', ' interested', ' in', ' where', ' your', ' food', ' comes', ' from', ',', ' how', ' it', ' gets', ' to', ' your', ' plate', ',', ' and', ' what', ' is', ' in', ' it', '.', ' Not', ' all', ' food', ' has', ' the', ' same', ' history', ' and', ' cont', 'orted', ' path', ',', ' but', ' the', ' threats', ' are', ' the', ' same', '.', ' Dil', 'ution', ',', ' mis', 'label', 'ing', ',', ' adul'], expected_activations=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0], activation_scale=<ActivationScale.SIMULATED_NORMALIZED_ACTIVATIONS: 'simulated_normalized_activations'>, distribution_values=[], distribution_probabilities=[], uncalibrated_simulation=None)
root - DEBUG - SequenceSimulation(dataclass_name='SequenceSimulation', tokens=[' subject', ',', ' sad', ' story', '\n', '\n', 'This', ' book', ' is', ' a', ' must', '-', 'read', ' if', ' you', ' are', ' interested', ' in', ' where', ' your', ' food', ' comes', ' from', ',', ' how', ' it', ' gets', ' to', ' your', ' plate', ',', ' and', ' what', ' is', ' in', ' it', '.', ' Not', ' all', ' food', ' has', ' the', ' same', ' history', ' and', ' cont', 'orted', ' path', ',', ' but', ' the', ' threats', ' are', ' the', ' same', '.', ' Dil', 'ution', ',', ' mis', 'label', 'ing', ',', ' adul'], expected_activations=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0], activation_scale=<ActivationScale.NEURON_ACTIVATIONS: 'neuron_activations'>, distribution_values=[], distribution_probabilities=[], uncalibrated_simulation=SequenceSimulation(dataclass_name='SequenceSimulation', tokens=[' subject', ',', ' sad', ' story', '\n', '\n', 'This', ' book', ' is', ' a', ' must', '-', 'read', ' if', ' you', ' are', ' interested', ' in', ' where', ' your', ' food', ' comes', ' from', ',', ' how', ' it', ' gets', ' to', ' your', ' plate', ',', ' and', ' what', ' is', ' in', ' it', '.', ' Not', ' all', ' food', ' has', ' the', ' same', ' history', ' and', ' cont', 'orted', ' path', ',', ' but', ' the', ' threats', ' are', ' the', ' same', '.', ' Dil', 'ution', ',', ' mis', 'label', 'ing', ',', ' adul'], expected_activations=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0], activation_scale=<ActivationScale.SIMULATED_NORMALIZED_ACTIVATIONS: 'simulated_normalized_activations'>, distribution_values=[], distribution_probabilities=[], uncalibrated_simulation=None))
httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
httpx - DEBUG - load_verify_locations cafile='/root/anaconda3/envs/gpt/lib/python3.9/site-packages/certifi/cacert.pem'
httpcore.connection - DEBUG - connect_tcp.started host='aip.baidubce.com' port=443 local_address=None timeout=None socket_options=None
httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x7f46b9a82fd0>
httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f46b9736240> server_hostname='aip.baidubce.com' timeout=None
httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x7f47382db7f0>
httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - send_request_headers.complete
httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - send_request_body.complete
httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Access-Control-Allow-Headers', b'Content-Type'), (b'Access-Control-Allow-Origin', b'*'), (b'Appid', b'57858329'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Date', b'Sun, 24 Mar 2024 12:52:23 GMT'), (b'P3p', b'CP=" OTI DSP COR IVA OUR IND COM "'), (b'Server', b'Apache'), (b'Set-Cookie', b'BAIDUID=3F4665FD1CABE5B8F2E0595C751229C9:FG=1; expires=Thu, 31-Dec-37 23:55:55 GMT; max-age=2145916555; path=/; domain=.baidu.com; version=1'), (b'Statement', b'AI-generated'), (b'Vary', b'Accept-Encoding'), (b'X-Aipe-Self-Def', b'eb_total_tokens:1277,prompt_tokens:1270,id:as-z4r4nepn7f'), (b'X-Baidu-Request-Id', b'a995cbdeeb5b67ffc3c0ee234cc8c8ef1000544'), (b'X-Openapi-Server-Timestamp', b'1711284742'), (b'X-Ratelimit-Limit-Requests', b'300'), (b'X-Ratelimit-Limit-Tokens', b'300000'), (b'X-Ratelimit-Remaining-Requests', b'299'), (b'X-Ratelimit-Remaining-Tokens', b'298730'), (b'Content-Length', b'198')])
httpx - INFO - HTTP Request: POST https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/chat/completions?access_token=BAIDUTOKEN "HTTP/1.1 200 OK"
httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - receive_response_body.complete
httpcore.http11 - DEBUG - response_closed.started
httpcore.http11 - DEBUG - response_closed.complete
httpcore.connection - DEBUG - close.started
httpcore.connection - DEBUG - close.complete
neuron_explainer.explanations.explainer - DEBUG - response in generate_explanations is {'id': 'as-z4r4nepn7f', 'object': 'chat.completion', 'created': 1711284743, 'result': ' references to the number "two".', 'is_truncated': False, 'need_clear_history': False, 'finish_reason': 'normal', 'usage': {'prompt_tokens': 1270, 'completion_tokens': 7, 'total_tokens': 1277}}
httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
httpx - DEBUG - load_verify_locations cafile='/root/anaconda3/envs/gpt/lib/python3.9/site-packages/certifi/cacert.pem'
httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
httpx - DEBUG - load_verify_locations cafile='/root/anaconda3/envs/gpt/lib/python3.9/site-packages/certifi/cacert.pem'
httpcore.connection - DEBUG - connect_tcp.started host='aip.baidubce.com' port=443 local_address=None timeout=None socket_options=None
httpcore.connection - DEBUG - connect_tcp.started host='aip.baidubce.com' port=443 local_address=None timeout=None socket_options=None
httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x7f46b9be0640>
httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f46b9ab80c0> server_hostname='aip.baidubce.com' timeout=None
httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x7f46b9a46700>
httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - send_request_headers.complete
httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - send_request_body.complete
httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
httpcore.connection - DEBUG - connect_tcp.failed exception=ConnectError(gaierror(-3, 'Temporary failure in name resolution'))
httpx - DEBUG - load_ssl_context verify=True cert=None trust_env=True http2=False
httpx - DEBUG - load_verify_locations cafile='/root/anaconda3/envs/gpt/lib/python3.9/site-packages/certifi/cacert.pem'
httpcore.connection - DEBUG - connect_tcp.started host='aip.baidubce.com' port=443 local_address=None timeout=None socket_options=None
httpcore.connection - DEBUG - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x7f46b9a46850>
httpcore.connection - DEBUG - start_tls.started ssl_context=<ssl.SSLContext object at 0x7f46b9ab8540> server_hostname='aip.baidubce.com' timeout=None
httpcore.connection - DEBUG - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x7f46b9a465e0>
httpcore.http11 - DEBUG - send_request_headers.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - send_request_headers.complete
httpcore.http11 - DEBUG - send_request_body.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - send_request_body.complete
httpcore.http11 - DEBUG - receive_response_headers.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Access-Control-Allow-Headers', b'Content-Type'), (b'Access-Control-Allow-Origin', b'*'), (b'Appid', b'57858329'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Date', b'Sun, 24 Mar 2024 12:52:57 GMT'), (b'P3p', b'CP=" OTI DSP COR IVA OUR IND COM "'), (b'Server', b'Apache'), (b'Set-Cookie', b'BAIDUID=6BD6D351F1CC4345265ABF221880C276:FG=1; expires=Thu, 31-Dec-37 23:55:55 GMT; max-age=2145916555; path=/; domain=.baidu.com; version=1'), (b'Statement', b'AI-generated'), (b'Vary', b'Accept-Encoding'), (b'X-Aipe-Self-Def', b'eb_total_tokens:3869,prompt_tokens:3415,id:as-psf0rfkz3x'), (b'X-Baidu-Request-Id', b'4c9195d55f0ba41d18121624274d2a2d1000912'), (b'X-Openapi-Server-Timestamp', b'1711284743'), (b'X-Ratelimit-Limit-Requests', b'300'), (b'X-Ratelimit-Limit-Tokens', b'300000'), (b'X-Ratelimit-Remaining-Requests', b'298'), (b'X-Ratelimit-Remaining-Tokens', b'295308'), (b'Content-Length', b'429')])
httpx - INFO - HTTP Request: POST https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/chat/completions?access_token=BAIDUTOKEN "HTTP/1.1 200 OK"
httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - receive_response_body.complete
httpcore.http11 - DEBUG - response_closed.started
httpcore.http11 - DEBUG - response_closed.complete
httpcore.connection - DEBUG - close.started
httpcore.connection - DEBUG - close.complete
neuron_explainer.explanations.simulator - DEBUG - result in score_explanation_by_activations is SequenceSimulation(dataclass_name='SequenceSimulation', tokens=[' off', 'beat', ' ,', ' Sc', 'reenshots', ' |', ' Follow', ' This', ' Author', ' @', 'K', 'art', 'ik', 'M', 'd', 'gl', '\n', '\n', 'We', ' have', ' two', ' images', ' from', ' Skyrim', ',', ' which', ' totally', ' st', 'umped', ' us', '.', ' They', ' show', ' a', ' walking', ' barrel', ',', ' and', ' we', "'re", ' not', ' sure', ' how', ' exactly', ' that', ' happened', '.', '\n', '\n', 'Check', ' out', ' these', ' two', ' images', ' below', '.', '\n', '\n', 'Some', ' people', ' really', ' do', ' some', ' weird'], expected_activations=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], activation_scale=<ActivationScale.SIMULATED_NORMALIZED_ACTIVATIONS: 'simulated_normalized_activations'>, distribution_values=[], distribution_probabilities=[], uncalibrated_simulation=None)
root - DEBUG - SequenceSimulation(dataclass_name='SequenceSimulation', tokens=[' off', 'beat', ' ,', ' Sc', 'reenshots', ' |', ' Follow', ' This', ' Author', ' @', 'K', 'art', 'ik', 'M', 'd', 'gl', '\n', '\n', 'We', ' have', ' two', ' images', ' from', ' Skyrim', ',', ' which', ' totally', ' st', 'umped', ' us', '.', ' They', ' show', ' a', ' walking', ' barrel', ',', ' and', ' we', "'re", ' not', ' sure', ' how', ' exactly', ' that', ' happened', '.', '\n', '\n', 'Check', ' out', ' these', ' two', ' images', ' below', '.', '\n', '\n', 'Some', ' people', ' really', ' do', ' some', ' weird'], expected_activations=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], activation_scale=<ActivationScale.NEURON_ACTIVATIONS: 'neuron_activations'>, distribution_values=[], distribution_probabilities=[], uncalibrated_simulation=SequenceSimulation(dataclass_name='SequenceSimulation', tokens=[' off', 'beat', ' ,', ' Sc', 'reenshots', ' |', ' Follow', ' This', ' Author', ' @', 'K', 'art', 'ik', 'M', 'd', 'gl', '\n', '\n', 'We', ' have', ' two', ' images', ' from', ' Skyrim', ',', ' which', ' totally', ' st', 'umped', ' us', '.', ' They', ' show', ' a', ' walking', ' barrel', ',', ' and', ' we', "'re", ' not', ' sure', ' how', ' exactly', ' that', ' happened', '.', '\n', '\n', 'Check', ' out', ' these', ' two', ' images', ' below', '.', '\n', '\n', 'Some', ' people', ' really', ' do', ' some', ' weird'], expected_activations=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], activation_scale=<ActivationScale.SIMULATED_NORMALIZED_ACTIVATIONS: 'simulated_normalized_activations'>, distribution_values=[], distribution_probabilities=[], uncalibrated_simulation=None))
httpcore.http11 - DEBUG - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'Access-Control-Allow-Headers', b'Content-Type'), (b'Access-Control-Allow-Origin', b'*'), (b'Appid', b'57858329'), (b'Connection', b'keep-alive'), (b'Content-Encoding', b'gzip'), (b'Content-Type', b'application/json; charset=utf-8'), (b'Date', b'Sun, 24 Mar 2024 12:53:05 GMT'), (b'P3p', b'CP=" OTI DSP COR IVA OUR IND COM "'), (b'Server', b'Apache'), (b'Set-Cookie', b'BAIDUID=BE6F93DB2288D25AFEA3AD0524C2050D:FG=1; expires=Thu, 31-Dec-37 23:55:55 GMT; max-age=2145916555; path=/; domain=.baidu.com; version=1'), (b'Statement', b'AI-generated'), (b'Vary', b'Accept-Encoding'), (b'X-Aipe-Self-Def', b'eb_total_tokens:3744,prompt_tokens:3291,id:as-w2yxfsxi8e'), (b'X-Baidu-Request-Id', b'451fb15e2273a0e890c8f12162eb1ad81001137'), (b'X-Openapi-Server-Timestamp', b'1711284754'), (b'X-Ratelimit-Limit-Requests', b'300'), (b'X-Ratelimit-Limit-Tokens', b'300000'), (b'X-Ratelimit-Remaining-Requests', b'297'), (b'X-Ratelimit-Remaining-Tokens', b'292017'), (b'Content-Length', b'440')])
httpx - INFO - HTTP Request: POST https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/chat/completions?access_token=BAIDUTOKEN "HTTP/1.1 200 OK"
httpcore.http11 - DEBUG - receive_response_body.started request=<Request [b'POST']>
httpcore.http11 - DEBUG - receive_response_body.complete
httpcore.http11 - DEBUG - response_closed.started
httpcore.http11 - DEBUG - response_closed.complete
httpcore.connection - DEBUG - close.started
httpcore.connection - DEBUG - close.complete
neuron_explainer.explanations.simulator - DEBUG - result in score_explanation_by_activations is SequenceSimulation(dataclass_name='SequenceSimulation', tokens=[' search', ' for', ' the', ' missing', ' Malaysia', ' Airways', ' plane', ',', ' a', ' senior', ' Malaysian', ' official', ' says', '.', '\n', '\n', '"', 'Cost', 's', ' will', ' be', ' shared', ' 50', '-', '50', ' between', ' Malaysia', ' and', ' Australia', ',"', ' deputy', ' Defence', ' Minister', ' Abdul', ' Rah', 'im', ' Bak', 'ri', ' said', ',', ' adding', ' there', ' were', ' no', ' figures', ' yet', ' for', ' how', ' much', ' the', ' countries', ' would', ' have', ' to', ' spend', '.', '\n', '\n', 'Australia', ' has', ' spent', ' more', ' than', ' $'], expected_activations=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], activation_scale=<ActivationScale.SIMULATED_NORMALIZED_ACTIVATIONS: 'simulated_normalized_activations'>, distribution_values=[], distribution_probabilities=[], uncalibrated_simulation=None)
root - DEBUG - SequenceSimulation(dataclass_name='SequenceSimulation', tokens=[' search', ' for', ' the', ' missing', ' Malaysia', ' Airways', ' plane', ',', ' a', ' senior', ' Malaysian', ' official', ' says', '.', '\n', '\n', '"', 'Cost', 's', ' will', ' be', ' shared', ' 50', '-', '50', ' between', ' Malaysia', ' and', ' Australia', ',"', ' deputy', ' Defence', ' Minister', ' Abdul', ' Rah', 'im', ' Bak', 'ri', ' said', ',', ' adding', ' there', ' were', ' no', ' figures', ' yet', ' for', ' how', ' much', ' the', ' countries', ' would', ' have', ' to', ' spend', '.', '\n', '\n', 'Australia', ' has', ' spent', ' more', ' than', ' $'], expected_activations=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], activation_scale=<ActivationScale.NEURON_ACTIVATIONS: 'neuron_activations'>, distribution_values=[], distribution_probabilities=[], uncalibrated_simulation=SequenceSimulation(dataclass_name='SequenceSimulation', tokens=[' search', ' for', ' the', ' missing', ' Malaysia', ' Airways', ' plane', ',', ' a', ' senior', ' Malaysian', ' official', ' says', '.', '\n', '\n', '"', 'Cost', 's', ' will', ' be', ' shared', ' 50', '-', '50', ' between', ' Malaysia', ' and', ' Australia', ',"', ' deputy', ' Defence', ' Minister', ' Abdul', ' Rah', 'im', ' Bak', 'ri', ' said', ',', ' adding', ' there', ' were', ' no', ' figures', ' yet', ' for', ' how', ' much', ' the', ' countries', ' would', ' have', ' to', ' spend', '.', '\n', '\n', 'Australia', ' has', ' spent', ' more', ' than', ' $'], expected_activations=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], activation_scale=<ActivationScale.SIMULATED_NORMALIZED_ACTIVATIONS: 'simulated_normalized_activations'>, distribution_values=[], distribution_probabilities=[], uncalibrated_simulation=None))
